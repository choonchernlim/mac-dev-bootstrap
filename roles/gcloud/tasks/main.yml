---
# homebrew_cask doesn't work... so, run the command directly
- name: Install gcloud
  ansible.builtin.command: brew install --cask google-cloud-sdk
  register: gcloud_homebrew_install_gcloud_output
  changed_when: not 'is already installed' in gcloud_homebrew_install_gcloud_output.stderr

- name: Disable reporting usage
  ansible.builtin.shell: $(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/gcloud config set disable_usage_reporting false
  register: gcloud_disable_reporting_output
  changed_when: not 'Updated property [core/disable_usage_reporting]' in gcloud_disable_reporting_output.stderr

- name: Update components
  ansible.builtin.shell: $(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/gcloud components update --quiet
  register: gcloud_update_components_output
  changed_when: not 'All components are up to date' in gcloud_update_components_output.stderr

- name: Install components
  ansible.builtin.shell: $(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/gcloud components install {{ item }}
  register: gcloud_install_components_output
  changed_when: not 'All components are up to date' in gcloud_install_components_output.stderr
  loop: '{{ gcloud_components }}'

- name: Add gcloud.sh to shell config dir
  ansible.builtin.copy:
    src: gcloud.sh
    dest: '{{ ohmyzsh_conf_dir }}/gcloud.sh'
    mode: '0644'
