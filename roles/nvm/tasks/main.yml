---
- name: Create ~/.nvm dir if not exist
  ansible.builtin.file:
    path: '{{ nvm_dir }}'
    state: directory
    mode: '0755'

- name: Install LTS version of Node
  ansible.builtin.shell: . $(brew --prefix)/opt/nvm/nvm.sh && nvm install --lts
  environment:
    NVM_DIR: '{{ nvm_dir }}'
  retries: '{{ playbook_retries }}'
  delay: '{{ playbook_delay }}'
  register: nvm_install_output
  until: not "Version '' (with LTS filter) not found" in nvm_install_output.stderr
  changed_when: not 'is already installed' in nvm_install_output.stderr

- name: Find all installed versions
  ansible.builtin.find:
    paths: '{{ nvm_dir }}/versions/node'
    file_type: directory
  register: nvm_installed_version_dirs

- name: Keep most recent version and delete all older versions
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ (nvm_installed_version_dirs.files | sort(attribute='mtime') | map(attribute='path'))[:-1] }}"

- name: Add nvm.sh to shell config dir
  ansible.builtin.copy:
    src: nvm.sh
    dest: '{{ ohmyzsh_conf_dir }}/nvm.sh'
    mode: '0644'
